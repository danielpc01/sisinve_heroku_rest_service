<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<context:component-scan base-package="com.inventario" />

	<mvc:annotation-driven />
	<tx:annotation-driven transaction-manager="transactionManager" />
		
	<!-- Configure to plugin JSON as request and response in method handler -->
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</beans:bean>
	
	<!-- HIBERNATE CONFIGURATON-->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="mySessionFactory" />
	</bean>
	
	<bean id="mySessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.inventario.persistencia.Area</value>
				<value>com.inventario.persistencia.Departamento</value>
				<value>com.inventario.persistencia.Producto</value>
				<value>com.inventario.persistencia.Tienda</value>
				<value>com.inventario.persistencia.Usuario</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>
	
	<bean id="myDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://YOUR_HOST:5432/" />
		<property name="username" value="YOUR_USERNAME" />
		<property name="password" value="YOUR_PASS" />
	</bean>
	<!-- org.hibernate.dialect.MySQL5Dialect -->
<!-- 	<bean id="myDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
<!-- 		<property name="driverClassName" value="org.postgresql.Driver" /> -->
<!-- 		<property name="url" value="jdbc:postgresql://localhost:5434/inventario" /> -->
<!-- 		<property name="username" value="postgres" /> -->
<!-- 		<property name="password" value="postgres" /> -->
<!-- 	</bean> -->
	<!-- END HIBERNATE CONFIGURATON-->
	
<!-- 	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> -->
<!-- 	     one of the properties available; the maximum file size in bytes -->
<!-- 	    <property name="maxUploadSize" value="900000"/> -->
<!-- 	</bean> -->
</beans>